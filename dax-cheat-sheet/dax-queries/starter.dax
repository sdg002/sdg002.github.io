/*
//HOW TO DEFINE A TABLE

DEFINE 
TABLE blah = TOPN( 4, bi_manufacturer)

EVALUATE(
blah
)


//HOW TO DEFINE A CALCULATED TABLE

DEFINE 
COLUMN bi_salesFact[MyCol] = year(bi_salesFact[Date])
EVALUATE
(
DISTINCT( bi_salesFact[MyCol] )
)



*/



//EVALUATE 
//(
//DISTINCT( bi_product[Segment])
//)
//


//EVALUATE
//(
//)
//


//DEFINE MEASURE bi_sales[MyMeasure]=COUNTROWS(bi_salesFact)








/*
//static table, does not work with COUNTROWS
EVALUATE
(
	DATATABLE
	(
		"Table", STRING,
		"RowCount", INTEGER,
		{
			{"bi_product",100},
			{"bi_sentiment",200}
		}
	)
)

*/


//top N rows

//order by

	

/*
//Get complete row with MAX manufacturer id
EVALUATE
(
FILTER(bi_manufacturer, bi_manufacturer[ManufacturerID] = MIN(bi_manufacturer[ManufacturerID]))
)

*/


/*
//Get manufacture name column with MAX manufacturer id
EVALUATE
{
CALCULATE
	(
	VALUES( bi_manufacturer[Manufacturer] ),
	FILTER(bi_manufacturer, bi_manufacturer[ManufacturerID] = MIN(bi_manufacturer[ManufacturerID]))
	)

}

*/



/*
//Define a simple hard coded measure

DEFINE 
MEASURE bi_manufacturer[totals] = "ooo"

EVALUATE
(
//manuf_segment_totalunits 
SELECTCOLUMNS(bi_manufacturer,"BLAH", bi_manufacturer[ManufacturerID], "blah total", bi_manufacturer[totals])
)  

*/


/*
//Define a measure to calculate Total units sold for every manufacturer
DEFINE 
MEASURE bi_manufacturer[total_units] = SUM( bi_salesFact[Units])

EVALUATE
(
SELECTCOLUMNS(bi_manufacturer,"Name", bi_manufacturer[Manufacturer] ,"Id", bi_manufacturer[ManufacturerID], "Total units", bi_manufacturer[total_units])
)  


*/


/*

//Here we are renaming the columns that are produced by GROUPBY/SUMMARIZE
DEFINE 
TABLE manuf_segment_totalunits = GROUPBY
	( 
		bi_salesFact, bi_product[ManufacturerID], bi_product[Segment] , 
		"total_units",SUMX( CURRENTGROUP(), 
		bi_salesFact[Units] ) ,"total_revenue",
		SUMX( CURRENTGROUP(), bi_salesFact[Revenue] ) 
	) 
EVALUATE
(
SELECTCOLUMNS( 
	manuf_segment_totalunits ,
	"manufacturer_id",[bi_product_ManufacturerID],
	"product_segment",[bi_product_Segment],
	"total_units",[total_units],
	"total_revenue",[total_revenue]
	)
) 



*/

/*
//How many sales were recoreded by a Manufacturer

EVALUATE
(
	SELECTCOLUMNS(
		bi_manufacturer,
		"ID", 
		bi_manufacturer[ManufacturerID], 
		"Name", bi_manufacturer[Manufacturer] ,
		"Count of sales",CALCULATE( COUNTROWS(bi_salesFact))
		)
)

*/


/*
//Highest Units sold by a product segment and Highest Revenue earned by a product Segment  - per Manufacturer
DEFINE 
TABLE manuf_segment_totalunits = GROUPBY
		( 
		bi_salesFact, bi_product[Manufacturer], bi_product[Segment] , 
		"total_units",SUMX( CURRENTGROUP(), bi_salesFact[Units] ) ,
		"total_revenue",SUMX( CURRENTGROUP(), bi_salesFact[Revenue] ) 
		) 

EVALUATE
(
	SUMMARIZE(
		manuf_segment_totalunits,[bi_product_Manufacturer] ,
		"MAX UNIT", CALCULATE(MAX(manuf_segment_totalunits[total_units])),
		"MAX REVENUE", CALCULATE(MAX(manuf_segment_totalunits[total_revenue]))
		)
) ORDER BY [bi_product_Manufacturer]

*/


/*
//Grouping of sales by segment for a specific Manufacturer
DEFINE

TABLE tbl=		
	GROUPBY
			(
				FILTER(bi_salesFact, RELATED(bi_product[ManufacturerID]) = 1), 
				bi_product[Segment], 
				"total_units",SUMX( CURRENTGROUP(), bi_salesFact[Units])
			)

EVALUATE
(
	tbl
)

*/



/*

//How to use selected value , here we are displaying the current Manuf ID

DEFINE
MEASURE bi_manufacturer[demo_of_selectedvalue] = CALCULATE
	(
	CALCULATE(SELECTEDVALUE(bi_manufacturer[ManufacturerID]) )
	)

EVALUATE
(
	SELECTCOLUMNS
	(
		bi_manufacturer,
		"id", bi_manufacturer[ManufacturerID],
		"name",bi_manufacturer[Manufacturer],
		"demo_of_selectedvalue", bi_manufacturer[demo_of_selectedvalue]
	)
)


*/



/*
//In this query we are printing out the count of sales transactions per customer
DEFINE
MEASURE bi_manufacturer[count_of_sales_txns] = CALCULATE
	(
	
	COUNTROWS
		(
		FILTER(BI_SALESFACT, RELATED(BI_PRODUCT[MANUFACTURERID]) = SELECTEDVALUE(BI_MANUFACTURER[MANUFACTURERID]))
		)	
	)

EVALUATE
(
	SELECTCOLUMNS
	(
		bi_manufacturer,
		"id", bi_manufacturer[ManufacturerID],
		"name",bi_manufacturer[Manufacturer],
		"count_of_sales_txns", bi_manufacturer[count_of_sales_txns]
	)
)


*/




/*
//List of all product segments a manufacturer is involved with

DEFINE
MEASURE bi_manufacturer[count_of_segments] = CALCULATE
	(
	
		COUNTROWS
		(
			GROUPBY
			(
				FILTER(bi_salesFact, RELATED(bi_product[ManufacturerID]) = SELECTEDVALUE(bi_manufacturer[ManufacturerID])),
				bi_product[Segment]
			)
		)
	
	)

EVALUATE
(
	SELECTCOLUMNS
	(
		bi_manufacturer,
		"id", bi_manufacturer[ManufacturerID],
		"name",bi_manufacturer[Manufacturer],
		"count_of_segments", bi_manufacturer[count_of_segments]
	)
)

*/



/*
//Power BI generated DAX query

DEFINE
  VAR __DS0Core = 
    SUMMARIZECOLUMNS(
      ROLLUPADDISSUBTOTAL('bi_manufacturer'[Manufacturer], "IsGrandTotalRowTotal"),
      "SumUnits", CALCULATE(SUM('bi_salesFact'[Units])),
      "SumRevenue", CALCULATE(SUM('bi_salesFact'[Revenue]))
    )

  VAR __DS0PrimaryWindowed = 
    TOPN(502, __DS0Core, [IsGrandTotalRowTotal], 0, 'bi_manufacturer'[Manufacturer], 1)

EVALUATE
  __DS0PrimaryWindowed


*/



/*

//How to use SUMMARIZECOLUMNS to do the first level of Grouping
EVALUATE
(
	SUMMARIZECOLUMNS
		(
		bi_product[Segment],
		bi_salesFact,
		"MAX UNIT", CALCULATE(MAX(bi_salesFact[Units]))
		)
)

//2 levels of grouping
EVALUATE
(
	SUMMARIZECOLUMNS
		(
		bi_manufacturer[Manufacturer],
		bi_product[Segment],
		bi_salesFact,
		"MAX UNIT", CALCULATE(SUM(bi_salesFact[Units]))
		)
) ORDER BY [Manufacturer] , [max unit] desc


*/




/*
HOW TO USE MAXX and SUMMARIZE 

EVALUATE
{
	MAXX(bi_manufacturer,[ManufacturerID])
}

*/


/*
How to use MAXX of a group

EVALUATE
{
	MAXX(
		SUMMARIZE
			(
			bi_salesFact,
			bi_product[Segment],
			"MAX UNIT", CALCULATE(MAX(bi_salesFact[Units]))
			),
		[MAX UNIT]
		)
}



//The following works - It displays the Product Segment with MAX UNITS, But this is not a measure!! You need the Segment name which produces the max value!!
EVALUATE
(
    SELECTCOLUMNS (
        bi_manufacturer,
        "ID", bi_manufacturer[ManufacturerID],
        "Name", bi_manufacturer[Manufacturer],
        "Max Stream Units", 
        CALCULATE
        (
		MAXX(
			SUMMARIZE
				(
				FILTER (  bi_salesFact, RELATED(bi_product[ManufacturerID] ) = SELECTEDVALUE(bi_manufacturer[ManufacturerID])),
				bi_product[Segment],
				"MAX UNIT", CALCULATE(SUM(bi_salesFact[Units]))
				),
			[MAX UNIT]
			)
        ) 
                
        //bi_manufacturer[max_stream_units]
    )
) ORDER BY [ID]

*/

/*
//Example of a multi-line measure
//We are returning another column value with some concatenation

DEFINE MEASURE bi_product[segment_maxmanuf] = 
	VAR	x=SELECTEDVALUE(bi_product[Category])
	RETURN CONCATENATE( x,"100")
	
EVALUATE
(
	SELECTCOLUMNS( 
		bi_product,
		"id",[ProductID], 
		"segment",[Segment], 
		"max_segment",[segment_maxmanuf])
)

*/


/*
How to use RANK to create a new computed column to show the ordering of Revenu

DEFINE MEASURE bi_manufacturer[rank_revenue] = RANKX( ALL(bi_manufacturer), SUMx( RELATEDTABLE( bi_salesFact) ,[Revenue]),,DESC)
	
	
EVALUATE
(
	SELECTCOLUMNS( 
		bi_manufacturer,
		"ID",[ManufacturerID], 
		"Name",[Manufacturer], 
		"Total revenue",  ROUND(SUMx( RELATEDTABLE( bi_salesFact) ,[Revenue]),2),
		"rank_revenue",[rank_revenue])
) ORDER BY [rank_revenue]


*/


/*
How to use RANKX without a measure


EVALUATE
(
	SELECTCOLUMNS
	( 
	bi_manufacturer,
	"id", bi_manufacturer[ManufacturerID],
	"name", bi_manufacturer[Manufacturer],
	"total revenue",ROUND(SUMX(RELATEDTABLE(bi_salesFact), [Revenue]),2),
	"RevenueRank",RANKX(bi_manufacturer,SUMX(RELATEDTABLE(bi_salesFact), [Revenue]),,ASC)
	)
)


*/